require('dotenv').config();
const { Client, RemoteAuth } = require('whatsapp-web.js');

console.log('üß™ ========================================');
console.log('üß™ WHATSAPP WEB SESSION - CONEXI√ìN EXISTENTE');
console.log('üß™ ========================================');
console.log('üì± INSTRUCCIONES:');
console.log('üì± 1. Abre WhatsApp Web en tu navegador');
console.log('üì± 2. Ve a https://web.whatsapp.com');
console.log('üì± 3. Aseg√∫rate de estar conectado');
console.log('üì± 4. Presiona F12 para abrir las herramientas de desarrollador');
console.log('üì± 5. Ve a la pesta√±a "Console"');
console.log('üì± 6. Copia y pega el siguiente c√≥digo:');
console.log('üì± ========================================');
console.log('üì± localStorage.getItem("WAToken1")');
console.log('üì± ========================================');
console.log('üì± 7. Copia el resultado (ser√° algo como "..."..."...")');
console.log('üì± 8. Pega ese valor cuando te lo pida este script');
console.log('üì± ========================================');

const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('üì± Pega el token de WhatsApp Web aqu√≠: ', (token) => {
    if (!token || token.trim() === '') {
        console.log('‚ùå Token no v√°lido. Saliendo...');
        rl.close();
        return;
    }

    console.log('üì± Conectando con WhatsApp Web...');
    
    // Configurar cliente con RemoteAuth
    const client = new Client({
        authStrategy: new RemoteAuth({
            clientId: 'taller-mecanico-client',
            dataPath: './whatsapp-session',
            backupSyncIntervalMs: 300000, // 5 minutos
            dataPath: './whatsapp-session'
        }),
        puppeteer: {
            headless: true,
            args: ['--no-sandbox', '--disable-setuid-sandbox']
        }
    });

    // Eventos
    client.on('qr', (qr) => {
        console.log('üì± QR generado (no deber√≠a aparecer si ya est√°s conectado)');
    });

    client.on('ready', () => {
        console.log('‚úÖ ========================================');
        console.log('‚úÖ WHATSAPP CONECTADO Y LISTO');
        console.log('‚úÖ ========================================');
        console.log('‚úÖ Cliente autenticado correctamente');
        console.log('‚úÖ Sesi√≥n vinculada con WhatsApp Web');
        console.log('‚úÖ Puedes cerrar esta ventana con Ctrl+C');
        console.log('‚úÖ ========================================');
        
        // Probar env√≠o de mensaje
        testMessage();
    });

    client.on('authenticated', () => {
        console.log('üîê Cliente autenticado');
    });

    client.on('auth_failure', (msg) => {
        console.error('‚ùå Error de autenticaci√≥n:', msg);
    });

    client.on('disconnected', (reason) => {
        console.log('üîå Cliente desconectado:', reason);
    });

    // Funci√≥n para probar env√≠o de mensaje
    async function testMessage() {
        try {
            console.log('üì± Probando env√≠o de mensaje...');
            
            // Obtener informaci√≥n del cliente
            const info = client.info;
            console.log('üì± N√∫mero conectado:', info.wid.user);
            console.log('üì± Nombre:', info.pushname);
            
            // Enviar mensaje de prueba (reemplaza con tu n√∫mero)
            const testNumber = '50212345678'; // Reemplaza con tu n√∫mero
            const message = 'üß™ Prueba del sistema de notificaciones del taller mec√°nico';
            
            console.log(`üì± Enviando mensaje de prueba a ${testNumber}...`);
            
            const chatId = `${testNumber}@c.us`;
            const result = await client.sendMessage(chatId, message);
            
            console.log('‚úÖ Mensaje enviado correctamente');
            console.log('‚úÖ ID del mensaje:', result.id._serialized);
            
        } catch (error) {
            console.error('‚ùå Error al enviar mensaje:', error.message);
        }
    }

    // Manejo de errores
    process.on('SIGINT', async () => {
        console.log('\nüõë Cerrando cliente de WhatsApp...');
        try {
            await client.destroy();
            console.log('‚úÖ Cliente cerrado correctamente');
        } catch (error) {
            console.error('‚ùå Error al cerrar cliente:', error.message);
        }
        rl.close();
        process.exit(0);
    });

    // Inicializar cliente
    client.initialize().catch(error => {
        console.error('‚ùå Error al inicializar cliente:', error.message);
        rl.close();
        process.exit(1);
    });

    rl.close();
});
